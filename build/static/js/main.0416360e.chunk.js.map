{"version":3,"sources":["components/CourseGoals/CourseGoalItem/CourseGoalItem.js","components/CourseGoals/CourseGoalList/CourseGoalList.js","components/UI/Button/Button.js","components/CourseGoals/CourseInput/CourseInput.js","App.js","index.js"],"names":["CourseGoalItem","props","className","onClick","onDelete","id","children","CourseGoalList","items","map","goal","onDeleteItem","text","Button","styled","button","FormControl","div","probs","invalid","CourseInput","useState","enteredValue","setEnteredValue","isValid","setisValid","onSubmit","event","preventDefault","trim","length","onAddGoal","type","onChange","value","target","App","courseGoals","setCourseGoals","content","style","textAlign","goalId","prevGoals","filter","enteredText","updatedGoals","unshift","Math","random","toString","ReactDOM","render","document","getElementById"],"mappings":"yTAmBeA,EAfQ,SAAAC,GAQrB,OACE,oBAAIC,UAAU,YAAYC,QANN,WAEpBF,EAAMG,SAASH,EAAMI,KAIrB,SACGJ,EAAMK,YCOEC,G,MAhBQ,SAAAN,GACrB,OACE,oBAAIC,UAAU,YAAd,SACGD,EAAMO,MAAMC,KAAI,SAAAC,GAAI,OACnB,cAAC,EAAD,CAEEL,GAAIK,EAAKL,GACTD,SAAUH,EAAMU,aAHlB,SAKGD,EAAKE,MAJDF,EAAKL,W,cCkBLQ,EA1BAC,IAAOC,OAAV,scCINC,G,MAAcF,IAAOG,IAAV,6bAOJ,SAACC,GAAD,OAAYA,EAAMC,QAAU,MAAQ,WAMzB,SAACD,GAAD,OAAYA,EAAMC,QAAU,MAAQ,UACpC,SAACD,GAAD,OAClBA,EAAMC,QAAU,qBAAuB,kBA6C9BC,EAhCK,SAACnB,GACnB,MAAwCoB,mBAAS,IAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAmBA,OACE,uBAAMC,SAVkB,SAACC,GACzBA,EAAMC,iBAC6B,IAA/BN,EAAaO,OAAOC,OAIxB7B,EAAM8B,UAAUT,GAHdG,GAAW,IAOb,UACE,eAACT,EAAD,CAAaG,SAAUK,EAAvB,UACE,gDACA,uBAAOQ,KAAK,OAAOC,SArBM,SAACN,GAC9B,IAAMO,EAAQP,EAAMQ,OAAOD,MAC3BX,EAAgBW,GACZA,EAAML,OAAOC,OAAS,GACxBL,GAAW,SAmBX,cAAC,EAAD,CAAQO,KAAK,SAAb,0BCZSI,G,MA3CH,WACV,MAAsCf,mBAAS,CAC7C,CAAET,KAAM,oBAAqBP,GAAI,MACjC,CAAEO,KAAM,qBAAsBP,GAAI,QAFpC,mBAAOgC,EAAP,KAAoBC,EAApB,KAoBIC,EACF,mBAAGC,MAAO,CAAEC,UAAW,UAAvB,4CASF,OANIJ,EAAYP,OAAS,IACvBS,EACE,cAAC,EAAD,CAAgB/B,MAAO6B,EAAa1B,aAbd,SAAA+B,GACxBJ,GAAe,SAAAK,GAEb,OADqBA,EAAUC,QAAO,SAAAlC,GAAI,OAAIA,EAAKL,KAAOqC,YAgB5D,gCACE,yBAASrC,GAAG,YAAZ,SACE,cAAC,EAAD,CAAa0B,UA5BI,SAAAc,GACrBP,GAAe,SAAAK,GACb,IAAMG,EAAY,YAAOH,GAEzB,OADAG,EAAaC,QAAQ,CAAEnC,KAAMiC,EAAaxC,GAAI2C,KAAKC,SAASC,aACrDJ,UA0BP,yBAASzC,GAAG,QAAZ,SACGkC,SCrCTY,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.0416360e.chunk.js","sourcesContent":["import React from 'react';\n\nimport './CourseGoalItem.css';\n\nconst CourseGoalItem = props => {\n  // const [deleteText, setDeleteText] = useState('');\n\n  const deleteHandler = () => {\n    // setDeleteText('(Deleted!)');\n    props.onDelete(props.id);\n  };\n\n  return (\n    <li className=\"goal-item\" onClick={deleteHandler}>\n      {props.children}\n    </li>\n  );\n};\n\nexport default CourseGoalItem;\n","import React from 'react';\n\nimport CourseGoalItem from '../CourseGoalItem/CourseGoalItem';\nimport './CourseGoalList.css';\n\nconst CourseGoalList = props => {\n  return (\n    <ul className=\"goal-list\">\n      {props.items.map(goal => (\n        <CourseGoalItem\n          key={goal.id}\n          id={goal.id}\n          onDelete={props.onDeleteItem}\n        >\n          {goal.text}\n        </CourseGoalItem>\n      ))}\n    </ul>\n  );\n};\n\nexport default CourseGoalList;\n","import styled from \"styled-components\";\n\nconst Button = styled.button`\n  width: 100%;\n  font: inherit;\n  padding: 0.5rem 1.5rem;\n  border: 1px solid #8b005d;\n  color: white;\n  background: #8b005d;\n  box-shadow: 0 0 4px rgba(0, 0, 0, 0.26);\n  cursor: pointer;\n\n  @media (min-width: 768px) {\n    width: auto;\n  }\n\n  &:focus {\n    outline: none;\n  }\n\n  &:hover,\n  & :active {\n    background: #ac0e77;\n    border-color: #ac0e77;\n    box-shadow: 0 0 8px rgba(0, 0, 0, 0.26);\n  }\n`;\n\nexport default Button;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport Button from \"../../UI/Button/Button\";\nimport \"./CourseInput.css\";\n\nconst FormControl = styled.div`\n  margin: 0.5rem 0;\n\n  & label {\n    font-weight: bold;\n    display: block;\n    margin-bottom: 0.5rem;\n    color: ${(probs) => (probs.invalid ? \"red\" : \"black\")};\n  }\n\n  & input {\n    display: block;\n    width: 100%;\n    border: 1px solid ${(probs) => (probs.invalid ? \"red\" : \"#ccc\")};\n    background-color: ${(probs) =>\n      probs.invalid ? \"rgb(233, 162, 152)\" : \"transparent\"};\n    font: inherit;\n    line-height: 1.5rem;\n    padding: 0 0.25rem;\n  }\n\n  & input:focus {\n    outline: none;\n    background: #fad0ec;\n    border-color: #8b005d;\n  }\n`;\n\nconst CourseInput = (props) => {\n  const [enteredValue, setEnteredValue] = useState(\"\");\n  const [isValid, setisValid] = useState(true);\n\n  const goalInputChangeHandler = (event) => {\n    const value = event.target.value;\n    setEnteredValue(value);\n    if (value.trim().length > 0) {\n      setisValid(true);\n    }\n  };\n\n  const formSubmitHandler = (event) => {\n    event.preventDefault();\n    if (enteredValue.trim().length === 0) {\n      setisValid(false);\n      return;\n    }\n    props.onAddGoal(enteredValue);\n  };\n\n  return (\n    <form onSubmit={formSubmitHandler}>\n      <FormControl invalid={!isValid}>\n        <label>Course Goal</label>\n        <input type=\"text\" onChange={goalInputChangeHandler} />\n      </FormControl>\n      <Button type=\"submit\">Add Goal</Button>\n    </form>\n  );\n};\n\nexport default CourseInput;\n","import React, { useState } from 'react';\n\nimport CourseGoalList from './components/CourseGoals/CourseGoalList/CourseGoalList';\nimport CourseInput from './components/CourseGoals/CourseInput/CourseInput';\nimport './App.css';\n\nconst App = () => {\n  const [courseGoals, setCourseGoals] = useState([\n    { text: 'Do all exercises!', id: 'g1' },\n    { text: 'Finish the course!', id: 'g2' }\n  ]);\n\n  const addGoalHandler = enteredText => {\n    setCourseGoals(prevGoals => {\n      const updatedGoals = [...prevGoals];\n      updatedGoals.unshift({ text: enteredText, id: Math.random().toString() });\n      return updatedGoals;\n    });\n  };\n\n  const deleteItemHandler = goalId => {\n    setCourseGoals(prevGoals => {\n      const updatedGoals = prevGoals.filter(goal => goal.id !== goalId);\n      return updatedGoals;\n    });\n  };\n\n  let content = (\n    <p style={{ textAlign: 'center' }}>No goals found. Maybe add one?</p>\n  );\n\n  if (courseGoals.length > 0) {\n    content = (\n      <CourseGoalList items={courseGoals} onDeleteItem={deleteItemHandler} />\n    );\n  }\n\n  return (\n    <div>\n      <section id=\"goal-form\">\n        <CourseInput onAddGoal={addGoalHandler} />\n      </section>\n      <section id=\"goals\">\n        {content}\n      </section>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}